name: Requirements frontend

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Type of machine to run"
        type: string
        default: ubuntu-latest
        required: false
      project-name:
        description: 'Project name which is gonna be the project identifier in SonarCloud'
        required: true
        type: string
      project-key:
        description: 'Project key which is gonna be the project identifier in SonarCloud'
        required: true
        type: string
      organization:
        description: 'SonarCloud organization'
        required: false
        default: 'MISO-4501-2024-G8'
        type: string
      language:
        description: 'The language used to be analyzed'
        required: true
        default: ''
        type: string
      coverage-file:
        description: 'Override the default value for coverage file if the default is not the right one'
        required: false
        default: ''
        type: string
      debug:
        description: 'Override the default value for coverage file if the default is not the right one'
        required: false
        default: 'true'
        type: string
      sonar-project-properties-file:
        description: 'Override the default value for coverage file if the default is not the right on'
        required: false
        default: ''
        type: string
      node-version:
        description: "Version for NodeJS"
        required: false
        type: string
        default: "14.x"
      cache-name:
        description: "Cache Name"
        required: true
        type: string
      install-command:
        description: "Command for execute dev"
        required: false
        type: string
        default: 'sh install-dependencies.sh'

jobs:

  dev-dependencies:
    runs-on: ${{ inputs.runs-on }}
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        id: restore-cache
        env:
          cache-name: node-modules
        with:
          path: node_modules
          key: npm-${{ inputs.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: npm-${{ inputs.cache-name }}-
      - name: Install Dependencies
        if: steps.restore-cache.outputs.cache-hit != 'true'
        shell: sh
        run: ${{ inputs.install-command }}
  test:
    runs-on: ${{ inputs.runs-on }}
    needs: dev-dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ inputs.node-version }}
      - name: Restore cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules
        with:
          path: node_modules
          key: npm-${{inputs.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: npm-${{ inputs.cache-name }}
      - name: Running Linter
        run: npm run lint
      - name: Running Test
        run: |
              npm run test
      - name: Persist Data
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage
          retention-days: 1

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}